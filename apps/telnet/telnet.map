Open Watcom Linker Version 2.0 beta Nov  3 2020 06:08:48 (64-bit)
Copyright (c) 2002-2020 The Open Watcom Contributors. All Rights Reserved.
Portions Copyright (c) 1985-2002 Sybase, Inc. All Rights Reserved.
Created on:       20/11/11 22:00:09
Executable Image: telnet.exe
creating a DOS executable


                        +------------+
                        |   Groups   |
                        +------------+

Group                           Address              Size
=====                           =======              ====

DGROUP                          1a40:0000            00003430



                        +--------------+
                        |   Segments   |
                        +--------------+

Segment                Class          Group          Address         Size
=======                =====          =====          =======         ====

packet_TEXT            CODE           AUTO           0000:0000       00000643
arp_TEXT               CODE           AUTO           0000:0650       00000aae
eth_TEXT               CODE           AUTO           0000:1100       00000000
ip_TEXT                CODE           AUTO           0000:1100       00000ce5
tcp_TEXT               CODE           AUTO           0000:1df0       00002915
tcpsockm_TEXT          CODE           AUTO           0000:4710       00000454
udp_TEXT               CODE           AUTO           0000:4b70       0000041c
utils_TEXT             CODE           AUTO           0000:4f90       00001289
dns_TEXT               CODE           AUTO           0000:6220       00000f06
timer_TEXT             CODE           AUTO           0000:7130       00000087
ipasm_TEXT             CODE           AUTO           0000:71b8       0000013b
trace_TEXT             CODE           AUTO           0000:7300       00000107
telnet_TEXT            CODE           AUTO           0000:7410       00002a58
telnetsc_TEXT          CODE           AUTO           0000:9e70       00001125
keys_TEXT              CODE           AUTO           0000:afa0       00000197
ymodem_TEXT            CODE           AUTO           0000:b140       0000224a
_TEXT                  CODE           AUTO           0d39:0000       0000a10d
fsroot_TEXT            CODE           AUTO           0d39:a10d       0000000b
cppdata_TEXT           CODE           AUTO           0d39:a118       00000000
packet_DATA1           FAR_CONST      AUTO           174a:0008       00000139
arp_DATA1              FAR_CONST      AUTO           174a:0141       00000279
ip_DATA1               FAR_CONST      AUTO           174a:03ba       00000285
tcp_DATA1              FAR_CONST      AUTO           174a:063f       00000c50
tcpsockm_DATA1         FAR_CONST      AUTO           174a:128f       000001b0
udp_DATA1              FAR_CONST      AUTO           174a:143f       0000014d
utils_DATA1            FAR_CONST      AUTO           174a:158c       00000427
dns_DATA1              FAR_CONST      AUTO           174a:19b3       000004cb
trace_DATA1            FAR_CONST      AUTO           174a:1e7e       0000002a
telnet_DATA1           FAR_CONST      AUTO           174a:1ea8       00000962
telnetsc_DATA1         FAR_CONST      AUTO           174a:280a       0000000d
ymodem_DATA1           FAR_CONST      AUTO           174a:2817       00000744
fsroot_DATA1           FAR_CONST      AUTO           1a40:0000       00000000
cppdata_DATA1          FAR_CONST      AUTO           1a40:0000       00000000
FAR_DATA               FAR_DATA       AUTO           1a40:0000       00000000
_NULL                  BEGDATA        DGROUP         1a40:0000       00000020
_AFTERNULL             BEGDATA        DGROUP         1a42:0000       00000002
CONST                  DATA           DGROUP         1a42:0002       000003c6
CONST2                 DATA           DGROUP         1a7f:0000       0000024a
_DATA                  DATA           DGROUP         1aa4:0000       000007e4
XIB                    DATA           DGROUP         1b22:0004       00000000
XI                     DATA           DGROUP         1b22:0004       00000030
XIE                    DATA           DGROUP         1b25:0004       00000000
YIB                    DATA           DGROUP         1b25:0004       00000000
YI                     DATA           DGROUP         1b25:0004       00000018
YIE                    DATA           DGROUP         1b26:000c       00000000
STRINGS                DATA           DGROUP         1b26:000c       00000000
DATA                   DATA           DGROUP         1b26:000c       00000000
_BSS                   BSS            DGROUP         1b27:0000       000015bc
STACK                  STACK          DGROUP         1c83:0000       00001000


                        +----------------+
                        |   Memory Map   |
                        +----------------+

* = unreferenced symbol
+ = symbol only referenced locally

Address        Symbol
=======        ======

Module: packet.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/packet.cpp)
1a40:0eee      char unsigned __far Buffer_first
1a40:0eef      char unsigned __far Buffer_next
1a40:0f4a      char unsigned __far Buffer_lowFreeCount
1a40:0f4c      long unsigned __far Packets_dropped
1a40:0f50      long unsigned __far Packets_received
1a40:0f54      long unsigned __far Packets_sent
1a40:0f58      long unsigned __far Packets_send_errs
1a40:0f5c+     long unsigned __far Packets_send_retries
0000:0000      char signed __far Buffer_init()
0000:0092      void __far Buffer_startReceiving()
0000:009a      void __far Buffer_free( char unsigned const __far * )
0000:00fc      void __far Buffer_stopReceiving()
0000:0104      void __far Buffer_stop()
0000:0120      char signed __far Packet_registerEtherType( short unsigned, void (__far *)())
0000:0162*     void __far Packet_registerDefault( void (__far *)())
0000:024a      char signed __far Packet_init( char unsigned )
0000:033e      char signed __far Packet_release_type()
0000:03c0      void __far Packet_get_addr( char unsigned __far * )
0000:03fe      void __far Packet_send_pkt( void __far *, short unsigned )
0000:04de      void __far Packet_process_internal()
0000:05e8      void __far Packet_dumpStats( __iobuf __far * )
0000:0638*     char unsigned __far Packet_getSoftwareInt()
0000:063e*     short unsigned __far Packet_getHandle()
1a40:0640+     char const __far * __far PKT_DRVR_EYE_CATCHER
1a40:0f64+     void (__far * __far Packet_EtherTypeHandler[])( char unsigned __far *, short unsigned )
1a40:0f6c+     short unsigned __far Packet_EtherTypeVal[]
1a40:0f70+     char unsigned __far Packet_EtherTypeHandlers
1a40:0f72+     void (__far * __far Packet_typeUnhandled)( char unsigned __far *, short unsigned )
Module: arp.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/arp.cpp)
1a40:0f80+     Arp::__1d89chPending_t __far Arp::pending[]
1a40:0f94      short unsigned __far Arp::pendingEntries
1a40:0f96+     Arp::__ja02nRec_t __far Arp::arpTable[]
1a40:0fdc+     short unsigned __far Arp::entries
1a40:0fe0+     long unsigned __far Arp::RequestsReceived
1a40:0fe4+     long unsigned __far Arp::RepliesReceived
0000:0650      void __far Arp::dumpStats( __iobuf __far * )
0000:06a2      void __far Arp::init()
0000:082e      void __far Arp::clearPendingTable()
0000:0854*     void __far Arp::dumpTable()
0000:08f2+     char signed __far Arp::findEth( char unsigned const __far *, char unsigned __far * )
0000:0988      void __far Arp::processArp( char unsigned __far *, short unsigned )
0000:0bd6      void __far Arp::driveArp2()
0000:0cc8+     void __far Arp::updateEntry( short unsigned, char unsigned const __far * )
0000:0d42+     void __far Arp::updateOrAddCache( char unsigned __far *, char unsigned __far * )
0000:0ed0+     void __far Arp::sendArpRequest( char unsigned __far * )
0000:0fb2+     void __far Arp::sendArpRequest2( char unsigned __far * )
0000:102c+     void __far Arp::sendArpResponse( ArpHeader __far * )
0000:10de      char signed __far Arp::resolve( char unsigned __far *, char unsigned __far * )
1a40:0fe8+     long unsigned __far Arp::RequestsSent
1a40:0fec+     long unsigned __far Arp::RepliesSent
1a40:0ff0+     long unsigned __far Arp::CacheModifiedCount
1a40:0ff4+     long unsigned __far Arp::CacheEvictions
1a40:0ff8+     __48kk6eArpPacket_t __far Arp_prebuiltResponse
1a40:1034+     __48kk6eArpPacket_t __far Arp_prebuiltRequest
Module: eth.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/eth.cpp)
1a40:03f0      char unsigned const __far Eth::Eth_Broadcast[]
1a40:0662      short unsigned __far MyMTU
1a40:1070      char unsigned __far MyEthAddr[]
Module: ip.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/ip.cpp)
1a40:1080      char unsigned __far Gateway[]
1a40:1084      char unsigned __far IpThisMachine[]
1a40:1088+     long unsigned __far Ip::icmpRecvPackets
1a40:108c*     long unsigned __far Ip::ptrWrapCorrected
1a40:1090+     long unsigned __far Ip::badChecksum
1a40:1094+     long unsigned __far Ip::unhandledProtocol
1a40:1098+     long unsigned __far Ip::fragsReceived
1a40:109c+     long unsigned __far Ip::goodReassemblies
1a40:10a0+     long unsigned __far Ip::timeoutReassemblies
1a40:10a4+     long unsigned __far Ip::notEnoughSlots
1a40:10a8+     long unsigned __far Ip::tooManyInFlight
1a40:10ac+     long unsigned __far Ip::payloadTooBig
1a40:10b0+     short unsigned __far IpHeader::IpIdent
1a40:10b2      char unsigned __far * __far Ip::ipReassemblyMemoryStart
1a40:10b6      char unsigned __far * __far Ip::ipReassemblyMemoryEnd
1a40:10ba      char unsigned __far Ip::fragsInReassembly
1a40:0670      char __far MyHostname[]
1a40:0684      char unsigned __far MyIpAddr[]
1a40:0688      char unsigned __far Netmask[]
1a40:068c      long unsigned __far MyIpAddr_u
1a40:0690      long unsigned __far Netmask_u
1a40:0694      char unsigned __far IpBroadcast[]
0000:1100      void __far Ip::dumpStats( __iobuf __far * )
0000:1276      int __far Ip::initForReassembly()
0000:12f4      void __far Ip::reassemblyStop()
0000:1338      void __far Ip::returnBigPacket( char unsigned __far * )
0000:1354      void __far Ip::purgeOverdue()
0000:18fe      void __far Ip::process( char unsigned __far *, short unsigned )
0000:1a6e      void __far IpHeader::set( char unsigned, char unsigned const __far *, short unsigned, char unsigned, short unsigned )
0000:1b5a      char signed __far IpHeader::setDestEth( char unsigned __far * )
0000:1be4      void __far Icmp::init()
0000:1c10+     void __near Icmp::process( char unsigned __far *, IpHeader __far * )
1a40:1246+     void (__far * __far Icmp::icmpCallback)( char unsigned const __far *, IcmpHeader const __far * )
1a40:124a+     __oot5mIcmpEchoPacket_t __far Icmp::icmpEchoPacket
Module: tcp.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/tcp.cpp)
1a40:1380      long unsigned __far Tcp::Packets_Sent
1a40:1384      long unsigned __far Tcp::Packets_Received
1a40:1388      long unsigned __far Tcp::Packets_Retransmitted
1a40:138c      long unsigned __far Tcp::Packets_SeqOrAckError
1a40:1390      long unsigned __far Tcp::Packets_DroppedNoSpace
1a40:1394+     long unsigned __far Tcp::OurWindowReopened
1a40:1398+     long unsigned __far Tcp::SentZeroWindowProbe
1a40:139c+     long unsigned __far Tcp::ChecksumErrors
1a40:13a0      short unsigned __far Tcp::Pending_Sent
1a40:13a2      short unsigned __far Tcp::Pending_Outgoing
1a40:13a4      TcpBuffer __far * __far TcpBuffer::xmitBuffers[]
1a40:13f4      char unsigned __far TcpBuffer::freeXmitBuffers
1a40:06c0+     char __far * __far TcpSocket::StateDesc[]
0000:1df0      void __far Tcp::dumpStats( __iobuf __far * )
0000:1e42      char signed __far TcpBuffer::init( char unsigned )
0000:1f54      void __far TcpBuffer::stop()
0000:1f70*     __far TcpSocket::TcpSocket()
0000:1f82      void __far TcpSocket::reinit()
0000:209c      char signed __far TcpSocket::setRecvBuffer( short unsigned )
0000:219c+     char signed __near TcpSocket::connect2( short unsigned, char unsigned __far *, short unsigned )
0000:2290*     char signed __far TcpSocket::connect( short unsigned, char unsigned __far *, short unsigned, long unsigned )
0000:23c8      char signed __far TcpSocket::connectNonBlocking( short unsigned, char unsigned __far *, short unsigned )
0000:23dc*     char signed __far TcpSocket::shutdown( char unsigned )
0000:2446+     char signed __near TcpSocket::closeLocal()
0000:25a2*     void __far TcpSocket::close()
0000:264e      void __far TcpSocket::closeNonblocking()
0000:269e      char signed __far TcpSocket::isCloseDone()
0000:2746+     void __near TcpSocket::clearQueues()
0000:2876      void __far TcpSocket::destroy()
0000:28fa+     void __near TcpSocket::setMaxEnqueueSize( TcpHeader __far * )
0000:2942      short __far TcpSocket::enqueue( TcpBuffer __far * )
0000:2b14+     void __near TcpSocket::resendPacket( TcpBuffer __far * )
0000:2bc4+     char signed __near TcpSocket::sendPacket( TcpBuffer __far * )
0000:306e+     void __near TcpSocket::sendResetPacket( IpHeader __far *, TcpHeader __far *, short unsigned )
0000:31a8+     void __near TcpSocket::sendPureAck( bool )
0000:327a      void __far Tcp::process( char unsigned __far *, IpHeader __far * )
0000:34ac+     void __near Tcp::process2( char unsigned __far *, IpHeader __far *, TcpHeader __far *, TcpSocket __far * )
0000:3b96+     int __far Tcp::processPacketData( TcpSocket __far *, short unsigned, char unsigned __far *, IpHeader __far *, TcpHeader __far * )
0000:3d94+     void __near TcpSocket::removeSentPackets( long unsigned )
0000:3fb4+     char signed __near TcpSocket::addToRcvBuf( char unsigned __far *, short unsigned )
0000:409c      short __far TcpSocket::recv( char unsigned __far *, short unsigned )
0000:4214      short __far TcpSocket::send( char unsigned __far *, short unsigned )
0000:433e      void __far Tcp::drivePackets2()
0000:46ac+     short unsigned __near TcpHeader::readMSS( TcpHeader __far * )
1a40:13f5+     char unsigned __far TcpBuffer::allocatedXmitBuffers
1a40:13f6+     void __far * __far TcpBuffer::xmitBuffersMemPtr
Module: tcpsockm.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/tcpsockm.cpp)
1a40:13fa      TcpSocket __far * __far TcpSocketMgr::socketTable[]
1a40:13fe+     TcpSocket __far * __far TcpSocketMgr::availSocketTable[]
1a40:1402+     TcpSocket __far * __far TcpSocketMgr::socketsMemPtr
1a40:1406      char unsigned __far TcpSocketMgr::activeSockets
1a40:1407+     char unsigned __far TcpSocketMgr::availSockets
0000:4710      char signed __far TcpSocketMgr::init( char unsigned )
0000:4852      void __far TcpSocketMgr::stop()
0000:486e      TcpSocket __far * __far TcpSocketMgr::getSocket()
0000:48e6      char signed __far TcpSocketMgr::freeSocket( TcpSocket __far * )
0000:4960*     TcpSocket __far * __far TcpSocketMgr::accept()
0000:4a78      void __far TcpSocketMgr::makeActive( TcpSocket __far * )
0000:4af8      void __far TcpSocketMgr::makeInactive( TcpSocket __far * )
1a40:1408+     char unsigned __far TcpSocketMgr::allocatedSockets
1a40:1409      char unsigned __far TcpSocketMgr::pendingAccepts
1a40:140a      short unsigned __far TcpSocketMgr::MSS_to_advertise
Module: udp.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/udp.cpp)
1a40:1410+     char unsigned __far Udp::callbackPorts
1a40:1412+     short unsigned __far Udp::callbackList[]
1a40:1414+     void (__far * __far Udp::callbackFunctions[])( char unsigned const __far *, UdpHeader const __far * )
1a40:1418+     long unsigned __far Udp::Packets_Sent
1a40:141c+     long unsigned __far Udp::Fragments_Sent
1a40:1420+     long unsigned __far Udp::Packets_Received
0000:4b70      void __far Udp::dumpStats( __iobuf __far * )
0000:4bb8      char signed __far Udp::registerCallback( short unsigned, void (__far *)())
0000:4c14      char signed __far Udp::unregisterCallback( short unsigned )
0000:4c7e      char signed __far Udp::sendUdp( char unsigned __far *, short unsigned, short unsigned, short unsigned, char unsigned __far *, char unsigned )
0000:4e46      void __far Udp::process( char unsigned const __far *, IpHeader __far * )
1a40:1424+     long unsigned __far Udp::NoHandler
1a40:1428+     long unsigned __far Udp::ChecksumErrors
Module: utils.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/utils.cpp)
1a40:0400+     char const __far Parm_PacketInt[]
1a40:0410+     char const __far Parm_Hostname[]
1a40:0420+     char const __far Parm_IpAddr[]
1a40:0428+     char const __far Parm_Gateway[]
1a40:0430+     char const __far Parm_Netmask[]
1a40:0438+     char const __far Parm_Nameserver[]
1a40:0448+     char const __far Parm_Nameserver_preferred[]
1a40:0460+     char const __far Parm_Mtu[]
1a40:1430      char unsigned __far mTCP_releaseTimesliceEnabled
1a40:1434+     char unsigned __far Preferred_nameserver[]
1a40:1438+     bool __far Preferred_nameserver_set
1a40:1439+     char unsigned __far Utils::packetInt
1a40:143a+     __iobuf __far * __far Utils::CfgFile
1a40:143e+     char __far * __far Utils::CfgFilenamePtr
1a40:1442+     void (__far * __far Utils::oldCtrlBreakHandler)()
1a40:1448+     char __far Utils::lineBuffer[]
1a40:14e8+     char __far Utils::parmName[]
0000:4f90      void __far Utils::dumpBytes( __iobuf __far *, char unsigned __far *, int unsigned )
0000:5094+     bool __far Utils::rtrim( char __far * )
0000:50be+     int __far Utils::getLine( __iobuf __far *, bool, char __far *, int, int )
0000:5180      char signed __far Utils::parseEnv()
0000:5834+     void __far Utils::parseOptionalEnvVars()
0000:58dc      __iobuf __far * __far Utils::openCfgFile()
0000:5938      void __far Utils::closeCfgFile()
0000:594a      char signed __far Utils::getAppValue( char const __far *, char __far *, short unsigned )
0000:5a34      char signed __far Utils::initStack( char unsigned, char unsigned, void (__far *)(), void (__far *)())
0000:5e64      void __far Utils::endStack()
0000:5ee8+     void __far Utils::dumpStats( __iobuf __far * )
0000:5f1a*     long unsigned __far Utils::timeDiff( dostime_t, dostime_t )
0000:6012+     char __far * __far Utils::getNextToken( char __far *, char __far *, short unsigned )
1a40:0707      char unsigned __far mTCP_sleepCallEnabled
Module: dns.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/dns.cpp)
0000:6220      char signed __far Dns::init( short unsigned )
0000:6280      void __far Dns::stop()
0000:6296*     void __far Dns::dumpTable()
0000:62ea      char signed __far Dns::resolve( char const __far *, char unsigned __far *, char unsigned )
0000:648e+     void __far Dns::sendRequest( char unsigned __far *, char const __far *, short unsigned )
0000:6786+     void __far Dns::addOrUpdate( char __far *, char unsigned __far * )
0000:688e+     char signed __far Dns::find( char const __far * )
0000:68f2+     void __far Dns::udpHandler( char unsigned const __far *, UdpHeader const __far * )
0000:6f32      void __far Dns::drivePendingQuery()
0000:6ffa+     void __far Dns::drivePendingQuery2()
1a40:1560+     short unsigned __far Dns::handlerPort
1a40:1564      char unsigned __far Dns::NameServer[]
1a40:1568+     Dns::__4rnkjhDNS_Rec_t __far Dns::dnsTable[]
1a40:15f0+     char unsigned __far Dns::entries
1a40:15f1      char unsigned __far Dns::queryPending
1a40:15f2+     char signed __far Dns::lastQueryRc
1a40:15f4+     Dns::__39fnomDNS_Pending_Rec_t __far Dns::pendingQuery
Module: timer.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/timer.cpp)
1a40:1810      long unsigned volatile __far Timer_CurrentTicks
0000:7130+     void __far Timer_tick_handler()
0000:7160      void __far Timer_start()
0000:7192      void __far Timer_stop()
1a40:1816+     void (__far * __far Timer_old_tick_handler)()
Module: ipasm.obj(IPASM)
0000:71b8      _ipchksum
0000:71e8      _ip_p_chksum
0000:725d*     _ip_p_chksum2
Module: trace.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/tcplib/trace.cpp)
0000:7300      void __far Trace_beginTracing()
0000:7356      void __far Trace_endTracing()
0000:7368      void __far Trace_tprintf( char __far *, ... )
1a40:073c      __iobuf __far * __far Trace_Stream
1a40:0740      char __far Trace_Severity
1a40:1820      short unsigned __far Trace_Debugging
1a40:1828      char __far Trace_LogFile[]
Module: telnet.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/apps/telnet/telnet.cpp)
1a40:1880      TcpSocket __far * __far mySocket
1a40:1888+     char __far serverAddrName[]
1a40:18d8+     char unsigned __far serverAddr[]
1a40:18dc      SocketInputMode_t::e __far SocketInputMode
1a40:18de      UserInputMode_t::e __far UserInputMode
1a40:18e0+     bool __far DebugTelnet
1a40:18e1+     bool __far DebugAnsi
1a40:18e2+     char unsigned __far LocalEcho
1a40:18e3+     char unsigned volatile __far CtrlBreakDetected
1a40:18e8+     TelnetOpts __far MyTelnetOpts
1a40:1912      Screen __far s
1a40:194c+     StreamStates __far StreamState
1a40:194e+     CsiParseState_t __far csiParseState
1a40:1950+     short __far parms[]
1a40:1970+     short unsigned __far parmsFound
1a40:1972+     bool __far decPrivateControl
1a40:1978+     char __far traceBuffer[]
1a40:19b4+     short unsigned __far traceBufferLen
1a40:19b6+     char unsigned __far bg
1a40:19b7+     char unsigned __far bold
1a40:19b8+     char unsigned __far blink
1a40:19b9+     bool __far underline
1a40:19ba+     char unsigned __far reverse
1a40:19bc+     short __far saved_cursor_x
1a40:19be+     short __far saved_cursor_y
1a40:0750+     short unsigned __far serverPort
1a40:0752      bool __far RawOrTelnet
1a40:0753+     char unsigned __far InitWrapMode
1a40:0754+     char unsigned __far SendBsAsDel
1a40:0755+     char unsigned __far NewLineMode
1a40:0756+     char unsigned __far BackScrollPages
1a40:0758+     long unsigned __far ConnectTimeout
1a40:0760+     char __far TermType[]
1a40:077e+     char unsigned __far fg
1a40:0780+     char unsigned __far fgColorMap_CGA[]
1a40:19c0+     char unsigned __far ColorScheme
1a40:19c2+     char unsigned __far * __far fgColorMap
1a40:19c6+     char unsigned __far * __far bgColorMap
1a40:19ca+     char unsigned __far scNormal
1a40:19cb      char unsigned __far scBright
1a40:19cc+     char unsigned __far scTitle
1a40:19cd+     char unsigned __far scBorder
1a40:19ce+     char unsigned __far scCommandKey
1a40:19cf+     char unsigned __far scToggleStatus
1a40:19d0      char unsigned __far scFileXfer
1a40:19d1      char unsigned __far scErr
1a40:0790+     char unsigned __far bgColorMap_CGA[]
1a40:07a0+     char unsigned __far fgColorMap_Mono[]
1a40:07b0+     char unsigned __far bgColorMap_Mono[]
0000:7426+     void __far ctrlBreakHandler()
0000:744c+     void __far ctrlCHandler()
0000:747a      main_
0000:801c+     void __far errorResolvingServer()
0000:8058+     void __far checkForUserExit()
0000:8388      void __far setTelnetBinaryMode( bool )
0000:8dde      short __far processTelnetCmds( char unsigned __far *, char unsigned )
1a40:0830+     __1kk4ncHelpMenu_t __far HelpMenu[]
1a40:0948+     char __far * __far NewLineModes[]
1a40:095c+     char __far * __far HelpText[]
1a40:1a78+     char unsigned __far telnetOptionsOutput[]
Module: telnetsc.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/apps/telnet/telnetsc.cpp)
0000:9e70      char signed __far Screen::init( char unsigned, char unsigned )
0000:9fba      void __far Screen::resetTerminalState()
0000:a066      void __far Screen::clearConsole()
0000:a0d6      void __far Screen::myCprintf( char unsigned, char unsigned, char unsigned, char __far *, ... )
0000:a11c+     void __far Screen::myCprintf_internal( char unsigned, char unsigned, char unsigned, char __far *, char __far * __far * )
0000:a240      void __far Screen::setHorizontal( short )
0000:a260      void __far Screen::setVertical( short )
0000:a29c      void __far Screen::adjustVertical( short )
0000:a31a      void __far Screen::scroll()
0000:a346+     void __far Screen::scrollInternal()
0000:a3fe      void __far Screen::add( char __far * )
0000:a41a      void __far Screen::add( char __far *, short unsigned )
0000:a6e2      void __far Screen::paint()
0000:a7b6      void __far Screen::paint( short )
0000:a8a0      void __far Screen::clear( short unsigned, short unsigned, short unsigned, short unsigned )
0000:aa12      void __far Screen::insLine( short unsigned )
0000:aae2      void __far Screen::delLine( short unsigned )
0000:aba6      void __far Screen::delChars( short unsigned )
0000:ad06      void __far Screen::insChars( short unsigned )
0000:ae58      void __far Screen::eraseChars( short unsigned )
0000:af32      void __far Screen::saveCursor()
0000:af64      void __far Screen::restoreCursor()
1a40:1ae0+     char __far cprintfBuffer[]
Module: keys.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/apps/telnet/keys.cpp)
0000:afa0      __oa1h2Key_t __far getKey()
Module: ymodem.obj(/home/mcasadevall/src/mtcp-src_2020-03-07/apps/telnet/ymodem.cpp)
1a40:0970+     char const __far * __far Transfer_vars::protocolNames[]
1a40:1b44      Transfer_vars __far transferVars
1a40:1f82+     char __far * __far ExtraFileBuffer
0000:b24a+     void __far xmodem_crcInit()
0000:b2d6      void __far initForXmodem()
0000:b5d2+     void __far drawBox( int, int, int, int )
0000:b736      void __far drawProtocolMenu()
0000:b78e+     void __far drawFilenameWindow()
0000:b7d6+     void __far drawClobberDialogWindow()
0000:b846+     void __far drawFileStatusWindow()
0000:ba02+     void __far updateFileStatus()
0000:ba60+     void __far updateFileMsg( char unsigned, char __far * )
0000:bb1a      void __far Transfer_vars::checkForDownloadTimeout()
0000:bbc2+     Transfer_vars::ParseHeaderRc_t __far Transfer_vars::parseYmodemHeader()
0000:bd4a      void __far processUserInput_FileProtocol( __oa1h2Key_t )
0000:bdea      void __far processUserInput_ClobberDialog( __oa1h2Key_t )
0000:bed2      void __far processUserInput_Transferring( __oa1h2Key_t )
0000:bf00      void __far processUserInput_Filename( __oa1h2Key_t )
0000:c184+     void __far Transfer_vars::startDownload()
0000:c228+     void __far Transfer_vars::startUpload()
0000:c2b4+     char signed __far Transfer_vars::processGoodPayload()
0000:c480      short unsigned __far processSocket_Upload( char unsigned __far *, short unsigned )
0000:c50e+     short unsigned __far Transfer_vars::processSocket_UploadInternal( char unsigned __far *, short unsigned )
0000:c842+     void __far Transfer_vars::sendHeader()
0000:c906+     char signed __far Transfer_vars::statFileForUpload()
0000:c966+     void __far Transfer_vars::sendXmodemPacket()
0000:cb44+     void __far Transfer_vars::transmitPacket()
0000:cd34+     void __far Transfer_vars::startNextYmodemFile()
0000:cd5a      short unsigned __far processSocket_Download( char unsigned __far *, short unsigned )
0000:cdf2+     short unsigned __far Transfer_vars::processSocket_DownloadInternal( char unsigned __far *, short unsigned )
1a40:04f0+     char const __far Transfer_vars::startDownloadBytes[]
1a40:09a0+     __61357nProtocolMenu_t __far ProtocolMenu[]
Module: /opt/watcom/lib286/dos/clibl.lib(fmalloc.c)
0d39:0000      _fmalloc_
0d39:0000      malloc_
1a40:09d0      ___fheapbeg
1a40:09d2      ___fheapRover
1a40:09d4      ___LargestSizeB4Rover
Module: /opt/watcom/lib286/dos/clibl.lib(ffree.c)
0d39:0110      _ffree_
0d39:0110      free_
Module: /opt/watcom/lib286/dos/clibl.lib(fmemcmp.c)
0d39:0158      _fmemcmp_
Module: /opt/watcom/lib286/dos/clibl.lib(intx086.c)
0d39:0180      int86x_
0d39:0221*     int86_
Module: /opt/watcom/lib286/dos/clibl.lib(fprintf.c)
0d39:024e      fprintf_
Module: /opt/watcom/lib286/dos/clibl.lib(getenv.c)
0d39:027d      getenv_
Module: /opt/watcom/lib286/dos/clibl.lib(strcpy.c)
0d39:034c      strcpy_
Module: /opt/watcom/lib286/dos/clibl.lib(time.c)
0d39:0397      time_
Module: /opt/watcom/lib286/dos/clibl.lib(memcpy.c)
0d39:03e2      memcpy_
Module: /opt/watcom/lib286/dos/clibl.lib(memset.c)
0d39:0404      memset_
Module: /opt/watcom/lib286/dos/clibl.lib(rand.c)
0d39:041b      rand_
0d39:045d      srand_
Module: /opt/watcom/lib286/dos/clibl.lib(i4d.asm)
0d39:0480      __I4D
0d39:04cf      __U4D
Module: /opt/watcom/lib286/dos/clibl.lib(fputs.c)
0d39:0553      fputs_
Module: /opt/watcom/lib286/dos/clibl.lib(fgets.c)
0d39:05f2      fgets_
Module: /opt/watcom/lib286/dos/clibl.lib(feof.c)
0d39:0681      feof_
Module: /opt/watcom/lib286/dos/clibl.lib(errno.c)
0d39:068e      __get_errno_ptr_
1a40:2186+     _errno
Module: /opt/watcom/lib286/dos/clibl.lib(strerror.c)
0d39:0695      strerror_
0d39:06bd*     _strerror_
1a40:09da+     __sys_errlist
1a40:0a7e+     __sys_nerr
Module: /opt/watcom/lib286/dos/clibl.lib(iob.c)
1a40:0a80      ___iob
1a40:2288      ___OpenStreams
1a40:228c      ___ClosedStreams
Module: /opt/watcom/lib286/dos/clibl.lib(fopen.c)
0d39:0788+     __open_flags_
0d39:098a+     _fsopen_
0d39:09ee      fopen_
0d39:0ac6*     freopen_
Module: /opt/watcom/lib286/dos/clibl.lib(fclose.c)
0d39:0b33      __doclose_
0d39:0bf7      __shutdown_stream_
0d39:0c11      fclose_
1a40:2290+     ___RmTmpFileFn
Module: /opt/watcom/lib286/dos/clibl.lib(stricmp.c)
0d39:0c5c      stricmp_
Module: /opt/watcom/lib286/dos/clibl.lib(sscanf.c)
0d39:0cc4+     vsscanf_
0d39:0cfa      sscanf_
Module: /opt/watcom/lib286/dos/clibl.lib(atoi.c)
0d39:0d28      atoi_
Module: /opt/watcom/lib286/dos/clibl.lib(fseek.c)
0d39:0e03      fseek_
Module: /opt/watcom/lib286/dos/clibl.lib(isspace.c)
0d39:0f6b      isspace_
Module: /opt/watcom/lib286/dos/clibl.lib(strncpy.c)
0d39:0f94      strncpy_
Module: /opt/watcom/lib286/dos/clibl.lib(d_getvec.c)
0d39:0fd0      _dos_getvect_
Module: /opt/watcom/lib286/dos/clibl.lib(d_setvec.c)
0d39:0fdb      _dos_setvect_
Module: /opt/watcom/lib286/dos/clibl.lib(fheapchk.c)
0d39:108f*     _fheapchk_
0d39:108f      _heapchk_
1a40:2294+     ___fheapchk_current
Module: /opt/watcom/lib286/dos/clibl.lib(fflush.c)
0d39:1109      fflush_
Module: /opt/watcom/lib286/dos/clibl.lib(i4m.asm)
0d39:111e      __I4M
0d39:111e      __U4M
Module: /opt/watcom/lib286/dos/clibl.lib(strlen.c)
0d39:1136      strlen_
Module: /opt/watcom/lib286/dos/clibl.lib(printf.c)
0d39:114b      printf_
Module: /opt/watcom/lib286/dos/clibl.lib(isdigit.c)
0d39:117a      isdigit_
Module: /opt/watcom/lib286/dos/clibl.lib(strcmp.c)
0d39:11a3      strcmp_
Module: /opt/watcom/lib286/dos/clibl.lib(chainint)
0d39:11cc      _chain_intr_
Module: /opt/watcom/lib286/dos/clibl.lib(gtime086.asm)
0d39:11ec      _dos_getdate_
0d39:120a      _dos_gettime_
Module: /opt/watcom/lib286/dos/clibl.lib(vfprintf.c)
0d39:1228      vfprintf_
Module: /opt/watcom/lib286/dos/clibl.lib(flushall.c)
0d39:123a      __flushall_
0d39:1297      flushall_
Module: /opt/watcom/lib286/dos/clibl.lib(puts.c)
0d39:129c      puts_
Module: /opt/watcom/lib286/dos/clibl.lib(sprintf.c)
0d39:12cc      sprintf_
Module: /opt/watcom/lib286/dos/clibl.lib(bioskeyb.c)
0d39:12fb      _bios_keybrd_
Module: /opt/watcom/lib286/dos/clibl.lib(exit.c)
0d39:1300+     __null_int23_exit_
0d39:1301      exit_
0d39:1319*     _exit_
1a40:0be8+     ___int23_exit
1a40:0bec+     ___FPE_handler_exit
Module: /opt/watcom/lib286/dos/clibl.lib(sound.c)
0d39:1334      sound_
0d39:136f      nosound_
Module: /opt/watcom/lib286/dos/clibl.lib(delay.c)
0d39:137b      delay_
Module: /opt/watcom/lib286/dos/clibl.lib(system.c)
0d39:14da      system_
Module: /opt/watcom/lib286/dos/clibl.lib(getch.c)
0d39:1555      getch_
Module: /opt/watcom/lib286/dos/clibl.lib(strupr.c)
0d39:156f      strupr_
Module: /opt/watcom/lib286/dos/clibl.lib(memmove.c)
0d39:1591      memmove_
Module: /opt/watcom/lib286/dos/clibl.lib(cstart)
1a40:0000*     __nullarea
1a40:0bf0*     __ovlflag
1a40:0bf1*     __intno
1a40:0bf2*     __ovlvec
0d39:1608      _cstart_
0d39:17b9      __exit_
0d39:17d6      __do_exit_with_msg_
0d39:18b5      __GETDS
Module: /opt/watcom/lib286/dos/clibl.lib(argcv.c)
1a40:2298      __argv
1a40:229c      ___argv
1a40:22a0      __argc
1a40:22a2      ___argc
Module: /opt/watcom/lib286/plibl.lib(fsroot.cpp)
1a40:0e3c      ___wcpp_4_data_init_fs_root_
Module: /opt/watcom/lib286/dos/clibl.lib(snprintf.c)
0d39:18f6      vsnprintf_
0d39:197a*     snprintf_
Module: /opt/watcom/lib286/dos/clibl.lib(isalnum.c)
0d39:19a9      isalnum_
Module: /opt/watcom/lib286/dos/clibl.lib(localtim.c)
0d39:19d2      _localtime_
0d39:1a61      localtime_
Module: /opt/watcom/lib286/dos/clibl.lib(asctime.c)
0d39:1a8a      _asctime_
0d39:1ba6*     asctime_
0d39:1bb5*     _ctime_
0d39:1bd5*     ctime_
Module: /opt/watcom/lib286/dos/clibl.lib(atoll.c)
0d39:1bec      atoll_
Module: /opt/watcom/lib286/dos/clibl.lib(stat.c)
0d39:1d49      stat_
Module: /opt/watcom/lib286/dos/clibl.lib(setvbuf.c)
0d39:2038      setvbuf_
Module: /opt/watcom/lib286/dos/clibl.lib(fwrite.c)
0d39:20c0      fwrite_
Module: /opt/watcom/lib286/dos/clibl.lib(fread.c)
0d39:22be      fread_
Module: /opt/watcom/lib286/dos/clibl.lib(utime.c)
0d39:26a1      utime_
Module: /opt/watcom/lib286/dos/clibl.lib(mem.c)
0d39:26f0      __MemAllocator
0d39:27b6      __MemFree
Module: /opt/watcom/lib286/dos/clibl.lib(growseg.c)
0d39:292d      __GrowSeg_
Module: /opt/watcom/lib286/dos/clibl.lib(allocseg.c)
0d39:29fc      __AllocSeg_
Module: /opt/watcom/lib286/dos/clibl.lib(fmemneed.c)
0d39:2a9b      __fmemneed_
Module: /opt/watcom/lib286/dos/clibl.lib(nmalloc.c)
0d39:2a9e      _nmalloc_
1a40:0bf6      ___nheapbeg
1a40:0bf8      ___MiniHeapRover
1a40:0bfa      ___LargestSizeB4MiniHeapRover
Module: /opt/watcom/lib286/dos/clibl.lib(heapgrow.c)
0d39:2b75*     _heapgrow_
0d39:2b75*     _fheapgrow_
0d39:2b76      _nheapgrow_
Module: /opt/watcom/lib286/dos/clibl.lib(nfree.c)
0d39:2bed      _nfree_
1a40:22d0+     ___MiniHeapFreeRover
Module: /opt/watcom/lib286/dos/clibl.lib(dointr)
0d39:2cea      _DoINTR_
Module: /opt/watcom/lib286/dos/clibl.lib(segread.c)
0d39:305f      segread_
Module: /opt/watcom/lib286/dos/clibl.lib(fprtf.c)
0d39:309b      __fprtf_
Module: /opt/watcom/lib286/dos/clibl.lib(environ.c)
1a40:22d2      ___env_mask
1a40:22d6*     __wenviron
1a40:22da      _environ
Module: /opt/watcom/lib286/dos/clibl.lib(mbterm.c)
0d39:3166      _mbterm_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsnextc.c)
0d39:31a8      _mbsnextc_
Module: /opt/watcom/lib286/dos/clibl.lib(mbcupper.c)
0d39:31d9      _mbctoupper_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsinc.c)
0d39:31fc      _mbsinc_
Module: /opt/watcom/lib286/dos/clibl.lib(gtctm.c)
0d39:3238      __getctime_
Module: /opt/watcom/lib286/dos/clibl.lib(mktime.c)
0d39:32c1      mktime_
Module: /opt/watcom/lib286/dos/clibl.lib(fputc.c)
0d39:337b      fputc_
Module: /opt/watcom/lib286/dos/clibl.lib(flush.c)
0d39:3450      __flush_
Module: /opt/watcom/lib286/dos/clibl.lib(ioalloc.c)
0d39:3588      __ioalloc_
Module: /opt/watcom/lib286/dos/clibl.lib(fgetc.c)
0d39:3622      __fill_buffer_
0d39:3717      fgetc_
Module: /opt/watcom/lib286/dos/clibl.lib(initfile.c)
0d39:37c1      __InitFiles_
Module: /opt/watcom/lib286/dos/clibl.lib(ioexit.c)
0d39:391c*     fcloseall_
0d39:3923      __full_io_exit_
Module: /opt/watcom/lib286/dos/clibl.lib(comtflag.c)
1a40:0bfc      __commode
Module: /opt/watcom/lib286/dos/clibl.lib(textmode.c)
1a40:0bfe      __fmode
Module: /opt/watcom/lib286/dos/clibl.lib(tolower.c)
0d39:392d      tolower_
Module: /opt/watcom/lib286/dos/clibl.lib(open.c)
0d39:3b4c      open_
0d39:3b83      sopen_
Module: /opt/watcom/lib286/dos/clibl.lib(chktty.c)
0d39:3bb0      __chktty_
Module: /opt/watcom/lib286/dos/clibl.lib(freefp.c)
0d39:3bdb      __freefp_
0d39:3c50      __purgefp_
Module: /opt/watcom/lib286/dos/clibl.lib(allocfp.c)
0d39:3c8c      __allocfp_
Module: /opt/watcom/lib286/dos/clibl.lib(__lseek.c)
0d39:3da2      __lseek_
Module: /opt/watcom/lib286/dos/clibl.lib(_clse.c)
0d39:3ddc      __close_
Module: /opt/watcom/lib286/dos/clibl.lib(scnf.c)
0d39:4c2e      __scnf_
Module: /opt/watcom/lib286/dos/clibl.lib(istable.c)
1a40:0530      __IsTable
Module: /opt/watcom/lib286/dos/clibl.lib(lseek.c)
0d39:4ea6      lseek_
Module: /opt/watcom/lib286/dos/clibl.lib(tell.c)
0d39:4ed7      tell_
Module: /opt/watcom/lib286/dos/clibl.lib(heapwalk.c)
0d39:4f2a      __HeapWalk_
Module: /opt/watcom/lib286/dos/clibl.lib(vsprintf.c)
0d39:504e      vsprintf_
Module: /opt/watcom/lib286/dos/clibl.lib(func086.asm)
0d39:507a*     __ibm_bios_equiplist_
0d39:507d      __ibm_bios_keybrd_
0d39:5092*     __ibm_bios_memsize_
0d39:5095*     __ibm_bios_printer_
0d39:50a0*     __ibm_bios_serialcom_
Module: /opt/watcom/lib286/dos/clibl.lib(initrtns.c)
0d39:50d9      __InitRtns
0d39:50d9*     __FInitRtns
0d39:5130      __FiniRtns
0d39:5130*     __FFiniRtns
Module: /opt/watcom/lib286/dos/clibl.lib(_slashc.c)
0d39:5190      __Slash_C_
Module: /opt/watcom/lib286/dos/clibl.lib(splp.c)
0d39:51b3      spawnlp_
Module: /opt/watcom/lib286/dos/clibl.lib(crwdata)
1a40:0c00      __curbrk
1a40:0c08      __STACKLOW
1a40:0c0a      __STACKTOP
1a40:0c0c      __cbyte
1a40:0c0e      __child
1a40:0c10      __no87
1a40:0c1d      ___FPE_handler
1a40:0c02      __psp
1a40:0c11      __get_ovl_stack
1a40:0c15      __restore_ovl_stack
1a40:0c19      __close_ovl_file
1a40:0c21      __LpCmdLine
1a40:0c25      __LpPgmName
1a40:0c04      __osmajor
1a40:0c05      __osminor
1a40:0c06      __osmode
1a40:0c07      __HShift
Module: /opt/watcom/lib286/dos/clibl.lib(xmsg.c)
0d39:51d1*     __exit_with_msg_
0d39:51d6      __fatal_runtime_error_
Module: /opt/watcom/lib286/dos/clibl.lib(cmain086.c)
0d39:51f0      __CMain
Module: /opt/watcom/lib286/dos/clibl.lib(uselfn.c)
1a40:0c2a      ___uselfn
Module: /opt/watcom/lib286/dos/clibl.lib(initargv.c)
0d39:540d      __Init_Argv_
0d39:546f      __Fini_Argv_
Module: /opt/watcom/lib286/plibl.lib(cppdata.cpp)
1a40:22e2      __wint_thread_data
1a40:2306*     __compiled_under_generic
Module: /opt/watcom/lib286/dos/clibl.lib(prtf.c)
0d39:5fea      __prtf_
Module: /opt/watcom/lib286/dos/clibl.lib(tzset.c)
1a40:0c2c      ___start_dst
1a40:0c3e      ___end_dst
1a40:0d52*     _tzname
1a40:0d5a      _timezone
1a40:0d5e      _daylight
1a40:0d60      ___dst_adjust
0d39:6276*     __DontCacheOSTZ_
0d39:628f*     __CacheOSTZ_
0d39:6847+     __parse_tz_
0d39:69d2      tzset_
Module: /opt/watcom/lib286/dos/clibl.lib(gmtime.c)
0d39:6a45      __brktime_
0d39:6ba8+     _gmtime_
0d39:6bcc*     gmtime_
Module: /opt/watcom/lib286/dos/clibl.lib(timeutil.c)
0d39:6d0d      __isindst_
Module: /opt/watcom/lib286/dos/clibl.lib(i8m086.asm)
0d39:701b*     __I8M
0d39:701b      __U8M
0d39:7000*     __I8ME
0d39:7000      __U8ME
Module: /opt/watcom/lib286/dos/clibl.lib(mbschr.c)
0d39:7165      _mbschr_
Module: /opt/watcom/lib286/dos/clibl.lib(mbscmp.c)
0d39:71eb      _mbscmp_
Module: /opt/watcom/lib286/dos/clibl.lib(mbspbrk.c)
0d39:7284      _mbspbrk_
Module: /opt/watcom/lib286/dos/clibl.lib(fullpath.c)
0d39:759a      _fullpath_
Module: /opt/watcom/lib286/dos/clibl.lib(gtcwd.c)
0d39:7660      getcwd_
Module: /opt/watcom/lib286/dos/clibl.lib(chdir.c)
0d39:770e      chdir_
Module: /opt/watcom/lib286/dos/clibl.lib(finddos.c)
0d39:771d      _dos_findfirst_
0d39:7750*     _dos_findnext_
0d39:7763      _dos_findclose_
Module: /opt/watcom/lib286/dos/clibl.lib(fstat.c)
0d39:7766      fstat_
Module: /opt/watcom/lib286/dos/clibl.lib(close.c)
0d39:78b2      close_
Module: /opt/watcom/lib286/dos/clibl.lib(d2ttime.c)
0d39:78b7      _d2ttime_
Module: /opt/watcom/lib286/dos/clibl.lib(qwrit.c)
0d39:7924      __qwrite_
Module: /opt/watcom/lib286/dos/clibl.lib(qread.c)
0d39:7986      __qread_
Module: /opt/watcom/lib286/dos/clibl.lib(intdx086.c)
0d39:79a6      intdosx_
Module: /opt/watcom/lib286/dos/clibl.lib(intd086.c)
0d39:7a41      intdos_
Module: /opt/watcom/lib286/dos/clibl.lib(heapen.c)
1a40:0d88      ___heap_enabled
Module: /opt/watcom/lib286/dos/clibl.lib(amblksiz.c)
1a40:0d8a      __amblksiz
Module: /opt/watcom/lib286/dos/clibl.lib(nmemneed.c)
0d39:7aa8      __nmemneed_
Module: /opt/watcom/lib286/dos/clibl.lib(grownear.c)
0d39:7b2a      __LastFree_
0d39:7ba2      __ExpandDGROUP_
Module: /opt/watcom/lib286/dos/clibl.lib(setenvp.c)
0d39:7cc5      __setenvp_
0d39:7dc8      __freeenvp_
Module: /opt/watcom/lib286/dos/clibl.lib(mbisdbcs.c)
1a40:0d8c      ___IsDBCS
Module: /opt/watcom/lib286/dos/clibl.lib(mbislead.c)
0d39:7e26*     _ismbblead_
1a40:231e      ___MBCSIsTable
Module: /opt/watcom/lib286/dos/clibl.lib(mbinit.c)
0d39:7ea7      __mbinit_
1a40:0d8e      ___MBCodePage
Module: /opt/watcom/lib286/dos/clibl.lib(mbdtoupp.c)
0d39:7f1c      _mbdtoupper_
Module: /opt/watcom/lib286/dos/clibl.lib(toupper.c)
0d39:7f2a      toupper_
Module: /opt/watcom/lib286/dos/clibl.lib(locmktim.c)
0d39:7f38      __local_mktime_
Module: /opt/watcom/lib286/dos/clibl.lib(fsync.c)
0d39:80fd      fsync_
Module: /opt/watcom/lib286/dos/clibl.lib(gtche.c)
0d39:8102      getche_
Module: /opt/watcom/lib286/dos/clibl.lib(opendos.c)
0d39:811c      _dos_open_
Module: /opt/watcom/lib286/dos/clibl.lib(iomode.c)
0d39:8142      __GetIOMode_
0d39:8167      __SetIOMode_nogrow_
1a40:0d90      ___NFiles
1a40:0d92      ___init_mode
1a40:0dba      ___io_mode
Module: /opt/watcom/lib286/dos/clibl.lib(isatt.c)
0d39:818a      isatty_
Module: /opt/watcom/lib286/dos/clibl.lib(dosret.c)
0d39:81a6      __dosretax
0d39:81ab*     __dosret0
0d39:81b2      __set_errno_dos_
0d39:823e*     __set_errno_dos_reterr_
Module: /opt/watcom/lib286/dos/clibl.lib(doserrno.c)
0d39:8249      __get_doserrno_ptr_
1a40:2420+     __doserrno
Module: /opt/watcom/lib286/dos/clibl.lib(umaskval.c)
1a40:0dd2      ___umaskval
Module: /opt/watcom/lib286/dos/clibl.lib(creatdos.c)
0d39:8250      _dos_creat_
0d39:8274*     _dos_creatnew_
Module: /opt/watcom/lib286/dos/clibl.lib(stiomode.c)
0d39:8295+     __grow_iomode_
0d39:835b+     __shrink_iomode_
0d39:8396      __SetIOMode_
Module: /opt/watcom/lib286/dos/clibl.lib(mbtowc.c)
0d39:83f9      mbtowc_
Module: /opt/watcom/lib286/dos/clibl.lib(bits.c)
1a40:0632      __Bits
Module: /opt/watcom/lib286/dos/clibl.lib(fdfs086.asm)
0d39:84fc      __FDFS
Module: /opt/watcom/lib286/dos/clibl.lib(noefgfmt.c)
1a40:0dd4      ___EFG_printf
1a40:0dd8      ___EFG_scanf
Module: /opt/watcom/lib286/dos/clibl.lib(sgdef086)
1a40:0e24      __Start_XI
1a40:0e54      __End_XI
1a40:0e54      __Start_YI
1a40:0e6c      __End_YI
Module: /opt/watcom/lib286/dos/clibl.lib(spvp.c)
0d39:8554      spawnvp_
Module: /opt/watcom/lib286/dos/clibl.lib(enterdb.c)
0d39:8575      __EnterWVIDEO_
1a40:0ddc+     ___WD_Present
Module: /opt/watcom/lib286/dos/clibl.lib(___argc.c)
1a40:2424      ____Argv
1a40:2428      ____Argc
Module: /opt/watcom/lib286/dos/clibl.lib(histsplt.c)
1a40:242a      ___historical_splitparms
Module: /opt/watcom/lib286/dos/clibl.lib(wctomb.c)
0d39:8599      wctomb_
Module: /opt/watcom/lib286/dos/clibl.lib(itoa.c)
0d39:85c2+     utoa_
0d39:861f      itoa_
Module: /opt/watcom/lib286/dos/clibl.lib(lltoa.c)
0d39:8643      ulltoa_
0d39:8727*     lltoa_
Module: /opt/watcom/lib286/dos/clibl.lib(ltoa.c)
0d39:8789      ultoa_
0d39:87f8*     ltoa_
Module: /opt/watcom/lib286/dos/clibl.lib(leapyear.c)
0d39:8827      ___diyr
0d39:8841      ___dilyr
0d39:885b      __leapyear_
Module: /opt/watcom/lib286/dos/clibl.lib(mbconv.c)
0d39:8885      _mbvtop_
Module: /opt/watcom/lib286/dos/clibl.lib(mbclen.c)
0d39:889a      _mbclen_
Module: /opt/watcom/lib286/dos/clibl.lib(mbccmp.c)
0d39:88c8      _mbccmp_
Module: /opt/watcom/lib286/dos/clibl.lib(stk086.asm)
0d39:891f      __STK
0d39:893f*     __STKOVERFLOW_
Module: /opt/watcom/lib286/dos/clibl.lib(_getdcwd.c)
0d39:895c      __getdcwd_
Module: /opt/watcom/lib286/dos/clibl.lib(error086.asm)
0d39:8972      __doserror_
0d39:8980      __doserror1_
Module: /opt/watcom/lib286/dos/clibl.lib(filelen.c)
0d39:898c      filelength_
Module: /opt/watcom/lib286/dos/clibl.lib(sbrk.c)
0d39:89ea      __brk_
0d39:8a4f*     sbrk_
Module: /opt/watcom/lib286/dos/clibl.lib(clearenv.c)
0d39:8a5f      clearenv_
Module: /opt/watcom/lib286/dos/clibl.lib(getltdos.c)
0d39:8b41      dos_get_dbcs_lead_table_
Module: /opt/watcom/lib286/dos/clibl.lib(getcpdos.c)
0d39:8b6a      dos_get_code_page_
Module: /opt/watcom/lib286/dos/clibl.lib(filedos.c)
0d39:8b7a*     _dos_close_
0d39:8b88      _dos_commit_
Module: /opt/watcom/lib286/dos/clibl.lib(frealloc.c)
0d39:8b97*     _frealloc_
0d39:8b97      realloc_
Module: /opt/watcom/lib286/dos/clibl.lib(iomodtty.c)
0d39:8c6f      __ChkTTYIOMode_
0d39:8cad*     __IOMode_
Module: /opt/watcom/lib286/dos/clibl.lib(spvpe.c)
0d39:8cbd      spawnvpe_
Module: /opt/watcom/lib286/dos/clibl.lib(alphabet.c)
0d39:8e44      ___Alphabet
Module: /opt/watcom/lib286/dos/clibl.lib(fmsize.c)
0d39:8e69*     _msize_
0d39:8e69      _fmsize_
Module: /opt/watcom/lib286/dos/clibl.lib(nexpand.c)
0d39:8e7a      _nexpand_
Module: /opt/watcom/lib286/dos/clibl.lib(fexpand.c)
0d39:8eca      _fexpand_
0d39:8eca*     _expand_
Module: /opt/watcom/lib286/dos/clibl.lib(spve.c)
0d39:8f5f      spawnve_
Module: /opt/watcom/lib286/dos/clibl.lib(strchr.c)
0d39:9409      strchr_
Module: /opt/watcom/lib286/dos/clibl.lib(_expand.c)
0d39:9428      __HeapManager_expand_
Module: /opt/watcom/lib286/dos/clibl.lib(bexpand.c)
0d39:95a8      _bexpand_
Module: /opt/watcom/lib286/dos/clibl.lib(cenvarg.c)
0d39:961b      __cenvarg_
0d39:983a      __ccmdline_
Module: /opt/watcom/lib286/dos/clibl.lib(dospawn)
0d39:98cb      ___dospawn
Module: /opt/watcom/lib286/dos/clibl.lib(execaddr.c)
0d39:99b3      __execaddr_
1a40:0e18+     ___Exec_addr
Module: /opt/watcom/lib286/dos/clibl.lib(stack086.c)
0d39:99c0      stackavail_
Module: /opt/watcom/lib286/dos/clibl.lib(split2.c)
0d39:9a4e      _splitpath2_
Module: /opt/watcom/lib286/dos/clibl.lib(save8087.c)
1a40:0e1c      ___Save8087
1a40:0e20      ___Rest8087
Module: /opt/watcom/lib286/dos/clibl.lib(mem086.asm)
0d39:9c00      _dos_allocmem_
0d39:9c22      _dos_freemem_
0d39:9c30*     _dos_setblock_
Module: /opt/watcom/lib286/dos/clibl.lib(fmemcpy.c)
0d39:9c4c      _fmemcpy_
Module: /opt/watcom/lib286/dos/clibl.lib(makepath.c)
0d39:9c88      _makepath_
Module: /opt/watcom/lib286/dos/clibl.lib(spl.c)
0d39:9ed5      spawnl_
Module: /opt/watcom/lib286/dos/clibl.lib(bfree.c)
0d39:9f00      _bfree_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsnccnt.c)
0d39:9f25      _mbsnccnt_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsncpy.c)
0d39:9f59      _mbsncpy_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsnbcnt.c)
0d39:9f8f      _mbsnbcnt_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsdec.c)
0d39:a008      _mbsdec_
Module: /opt/watcom/lib286/dos/clibl.lib(mbsnbcpy.c)
0d39:a095      _mbsnbcpy_


                        +--------------------+
                        |   Libraries Used   |
                        +--------------------+

/opt/watcom/lib286/plibl.lib
/opt/watcom/lib286/dos/clibl.lib


                        +-----------------------+
                        |   Linker Statistics   |
                        +-----------------------+

Stack size:  1000 (4096.)
Memory size:  0001d830 (120880.)
Entry point address: 0d39:1608
Link time: 00:00.77
